filesystem: "root"
mode: 0644
path: "/etc/kubernetes/manifests/etcd-member.yaml"
contents:
  inline: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: etcd-member
      namespace: openshift-etcd
      labels:
        k8s-app: etcd
    spec:
      initContainers:
      - name: discovery
        image: "{{.Images.setupEtcdEnvKey}}"
        command: ["/usr/bin/setup-etcd-environment"]
        args:
        - "run"
        - "--discovery-srv={{.EtcdDiscoveryDomain}}"
        - "--output-file=/run/etcd/environment"
        - "--bootstrap-srv={{if .Images.clusterEtcdOperatorImageKey}}{{false}}{{else}}{{true}}{{end}}"
        - "--v=4"
        volumeMounts:
        - name: discovery
          mountPath: /run/etcd/
        - name: data-dir
          mountPath: /var/lib/etcd/
      {{if .Images.clusterEtcdOperatorImageKey}}
        - name: sa
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount/
      {{end}}
        - name: certs
          mountPath: /etc/ssl/etcd/
        env:
        - name: ETCD_DATA_DIR
          value: "/var/lib/etcd"
        - name: ETCD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      - name: certs
        image: {{if .Images.clusterEtcdOperatorImageKey}}"{{.Images.clusterEtcdOperatorImageKey}}"{{else}}"{{.Images.kubeClientAgentImageKey}}"{{end}}
        command:
        - /bin/sh
        - -c
        - |
          #!/bin/sh
          set -euxo pipefail

          {{if .Images.clusterEtcdOperatorImageKey}}
            SERVER_COMMAND="cluster-etcd-operator mount"
            PEER_COMMAND="cluster-etcd-operator mount"
            METRIC_COMMAND="cluster-etcd-operator mount"
          {{else}}
            COMMAND="kube-client-agent request \
                --kubeconfig=/etc/kubernetes/kubeconfig \"
            SERVER_COMMAND="$COMMAND
                --dnsnames={{etcdServerCertDNSNames .}} \
                --ipaddrs=${ETCD_IPV4_ADDRESS},127.0.0.1 \
                --orgname=system:etcd-servers"
            PEER_COMMAND="$COMMAND
                --dnsnames={{etcdPeerCertDNSNames .}} \
                --ipaddrs=${ETCD_IPV4_ADDRESS}
                --orgname=system:etcd-peers"
            METRIC_COMMAND="$COMMAND
                --dnsnames={{etcdServerCertDNSNames .}} \
                --ipaddrs=${ETCD_IPV4_ADDRESS} \
                --orgname=system:etcd-metrics"
          {{end}}

          source /run/etcd/environment

          [ -e /etc/ssl/etcd/system:etcd-server:${ETCD_DNS_NAME}.crt -a \
            -e /etc/ssl/etcd/system:etcd-server:${ETCD_DNS_NAME}.key ] || \
            $SERVER_COMMAND \
                --assetsdir=/etc/ssl/etcd \
                --commonname=system:etcd-server:${ETCD_DNS_NAME} \

          [ -e /etc/ssl/etcd/system:etcd-peer:${ETCD_DNS_NAME}.crt -a \
            -e /etc/ssl/etcd/system:etcd-peer:${ETCD_DNS_NAME}.key ] || \
            $PEER_COMMAND \
                --assetsdir=/etc/ssl/etcd \
                --commonname=system:etcd-peer:${ETCD_DNS_NAME} \

          [ -e /etc/ssl/etcd/system:etcd-metric:${ETCD_DNS_NAME}.crt -a \
            -e /etc/ssl/etcd/system:etcd-metric:${ETCD_DNS_NAME}.key ] || \
            $METRIC_COMMAND \
                --assetsdir=/etc/ssl/etcd \
                --commonname=system:etcd-metric:${ETCD_DNS_NAME} \

        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: discovery
          mountPath: /run/etcd/
        - name: certs
          mountPath: /etc/ssl/etcd/
      {{if .Images.clusterEtcdOperatorImageKey}}
        - name: sa
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount/
      {{end}}
    {{if .Images.clusterEtcdOperatorImageKey}}
      - name: membership
        image: "{{.Images.etcdKey}}"
        command:
        - /bin/sh
        - -c
        - |
          #!/bin/sh
          set -euxo pipefail

          source /run/etcd/environment

          export ETCDCTL_API=3 ETCDCTL_CACERT=/etc/ssl/etcd/ca.crt ETCDCTL_CERT=$(find /etc/ssl/ -name *peer*crt) ETCDCTL_KEY=$(find /etc/ssl/ -name *peer*key)

          export ETCDCTL_ENDPOINTS="$ETCD_ENDPOINTS"

          until $(etcdctl member list | grep $ETCD_DNS_NAME>/dev/null)
          do
            echo "waiting for $ETCD_DNS_NAME to be added to etcd membership"
            sleep 2
          done
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: discovery
          mountPath: /run/etcd/
        - name: certs
          mountPath: /etc/ssl/etcd/
    {{end}}
      containers:
      - name: etcd-member
        image: "{{.Images.etcdKey}}"
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -ec
              - "lsof -n -i :2380 | grep LISTEN"
          failureThreshold: 3
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        command:
        - /bin/sh
        - -c
        - |
          #!/bin/sh
          set -euo pipefail

          source /run/etcd/environment

          set -a
          source /etc/etcd/etcd.conf
          set +a

          exec etcd \
            --initial-advertise-peer-urls=https://${ETCD_IPV4_ADDRESS}:2380 \
            --cert-file=/etc/ssl/etcd/system:etcd-server:${ETCD_DNS_NAME}.crt \
            --key-file=/etc/ssl/etcd/system:etcd-server:${ETCD_DNS_NAME}.key \
            --trusted-ca-file=/etc/ssl/etcd/ca.crt \
            --client-cert-auth=true \
            --peer-cert-file=/etc/ssl/etcd/system:etcd-peer:${ETCD_DNS_NAME}.crt \
            --peer-key-file=/etc/ssl/etcd/system:etcd-peer:${ETCD_DNS_NAME}.key \
            --peer-trusted-ca-file=/etc/ssl/etcd/ca.crt \
            --peer-client-cert-auth=true \
            --advertise-client-urls=https://${ETCD_IPV4_ADDRESS}:2379 \
            --listen-client-urls=https://0.0.0.0:2379 \
            --listen-peer-urls=https://0.0.0.0:2380 \
            --listen-metrics-urls=https://0.0.0.0:9978 \
        resources:
          requests:
            memory: 600Mi
            cpu: 300m
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: discovery
          mountPath: /run/etcd/
        - name: certs
          mountPath: /etc/ssl/etcd/
        - name: data-dir
          mountPath: /var/lib/etcd/
        - name: conf
          mountPath: /etc/etcd/

        env:
        - name: ETCDCTL_API
          value: "3"
        - name: ETCD_DATA_DIR
          value: "/var/lib/etcd"
        - name: ETCD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - name: peer
          containerPort: 2380
          protocol: TCP
        - name: server
          containerPort: 2379
          protocol: TCP
      - name: etcd-metrics
        image: "{{.Images.etcdKey}}"
        command:
        - /bin/sh
        - -c
        - |
          #!/bin/sh
          set -euo pipefail

          source /run/etcd/environment

          exec etcd grpc-proxy start \
            --endpoints https://${ETCD_DNS_NAME}:9978 \
            --metrics-addr https://0.0.0.0:9979 \
            --listen-addr 127.0.0.1:9977 \
            --key /etc/ssl/etcd/system:etcd-peer:${ETCD_DNS_NAME}.key \
            --key-file /etc/ssl/etcd/system:etcd-metric:${ETCD_DNS_NAME}.key \
            --cert /etc/ssl/etcd/system:etcd-peer:${ETCD_DNS_NAME}.crt \
            --cert-file /etc/ssl/etcd/system:etcd-metric:${ETCD_DNS_NAME}.crt \
            --cacert /etc/ssl/etcd/ca.crt \
            --trusted-ca-file /etc/ssl/etcd/metric-ca.crt \
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: discovery
          mountPath: /run/etcd/
        - name: certs
          mountPath: /etc/ssl/etcd/
        env:
        - name: ETCDCTL_API
          value: "3"
        ports:
        - name: metric
          containerPort: 9979
          protocol: TCP
      hostNetwork: true
      priorityClassName: system-node-critical
      tolerations:
      - operator: "Exists"
      restartPolicy: Always
      volumes:
      - name: certs
        hostPath:
          path: /etc/kubernetes/static-pod-resources/etcd-member
      - name: kubeconfig
        hostPath:
          path: /etc/kubernetes/kubeconfig
      - name: discovery
        hostPath:
          path: /run/etcd
      - name: data-dir
        hostPath:
          path: /var/lib/etcd
      - name: conf
        hostPath:
          path: /etc/etcd
    {{if .Images.clusterEtcdOperatorImageKey}}
      - name: sa
        hostPath:
          path: /etc/kubernetes/static-pod-resources/etcd-member/secrets/kubernetes.io/sa-token
    {{end}}
